import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Deque;
import java.util.List;
import java.util.StringTokenizer;
import java.util.TreeSet;

public class Main_10819_s_차이를최대로 {

	public static void main(String[] args) throws NumberFormatException, IOException {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int n = Integer.parseInt(br.readLine());
		Deque<Integer> input = new ArrayDeque<>();
		List<Integer> list = new ArrayList<>();
		StringTokenizer str = new StringTokenizer(br.readLine());
		for(int i = 0; i < n; i++) {
			list.add(Integer.parseInt(str.nextToken()));
		}
		Collections.sort(list);
		
		for(int i = 0; i< n; i++) {
			input.add(list.get(i));
		}
		System.out.println(ts.toString());
		Deque<Integer> dq = new ArrayDeque<>();
		dq.add(ts.pollFirst());
		while(ts.size() != 0) {
			if(ts.size() != 0) {
				dq.add(ts.pollLast());				
			}
			if(ts.size() != 0) {
				dq.addFirst(ts.pollLast());				
			}
			if(ts.size() != 0) {
				dq.addLast(ts.pollFirst());				
			}
			if(ts.size() != 0) {
				dq.addFirst(ts.pollFirst());				
			}
		}
		System.out.println(dq.toString());
		int result = 0;
		int index = 0;
		int[] dqToArray = new int[n];
		for(int i = 0; i < n-1; i++) {
			while(dq.size() != 0) {
				dqToArray[index] = dq.poll();
				index++;
			}
		}
		System.out.println(Arrays.toString(dqToArray));
		for(int i = 0; i < n-1; i++) {
			result += Math.abs(dqToArray[i] - dqToArray[i+1]);
		}
		System.out.println(result);
	}
}
